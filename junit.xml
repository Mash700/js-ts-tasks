<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.026" tests="57" failures="16">
  <testsuite name="Root Suite" timestamp="2024-11-18T15:26:59" tests="0" time="0.000" failures="0">
  </testsuite>
  <testsuite name="backToFront.js" timestamp="2024-11-18T15:26:59" tests="10" file="/Users/mac/js-ts-tasks/test/index.js" time="0.011" failures="10">
    <testcase name="backToFront.js should return &quot;&quot;ohelloo&quot;&quot;" time="0.001" classname="should return &quot;&quot;ohelloo&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;abcabcabc&quot;&quot;" time="0.000" classname="should return &quot;&quot;abcabcabc&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;world&quot;&quot;" time="0.000" classname="should return &quot;&quot;world&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;llbillll&quot;&quot;" time="0.000" classname="should return &quot;&quot;llbillll&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;!one!!&quot;&quot;" time="0.000" classname="should return &quot;&quot;!one!!&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;smallString&quot;&quot;" time="0.000" classname="should return &quot;&quot;smallString&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;320933&quot;&quot;" time="0.000" classname="should return &quot;&quot;320933&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;   &quot;&quot;" time="0.000" classname="should return &quot;&quot;   &quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;&apos;&apos;&apos;&quot;&quot;" time="0.000" classname="should return &quot;&quot;&apos;&apos;&apos;&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="backToFront.js should return &quot;&quot;&quot;&quot;" time="0.000" classname="should return &quot;&quot;&quot;&quot;">
      <failure message="BackSymbol is not defined" type="ReferenceError"><![CDATA[ReferenceError: BackSymbol is not defined
    at backToFront (src/backToFront.js:17:5)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="compareSalary.js" timestamp="2024-11-18T15:26:59" tests="6" file="/Users/mac/js-ts-tasks/test/index.js" time="0.004" failures="0">
    <testcase name="compareSalary.js should return &quot;400&quot;" time="0.002" classname="should return &quot;400&quot;">
    </testcase>
    <testcase name="compareSalary.js should return &quot;0&quot;" time="0.000" classname="should return &quot;0&quot;">
    </testcase>
    <testcase name="compareSalary.js should return &quot;2&quot;" time="0.000" classname="should return &quot;2&quot;">
    </testcase>
    <testcase name="compareSalary.js should return &quot;5349&quot;" time="0.000" classname="should return &quot;5349&quot;">
    </testcase>
    <testcase name="compareSalary.js should return &quot;609.008888&quot;" time="0.000" classname="should return &quot;609.008888&quot;">
    </testcase>
    <testcase name="compareSalary.js should return &quot;53492003509&quot;" time="0.000" classname="should return &quot;53492003509&quot;">
    </testcase>
  </testsuite>
  <testsuite name="compareTwoNumbers.js" timestamp="2024-11-18T15:26:59" tests="5" file="/Users/mac/js-ts-tasks/test/index.js" time="0.001" failures="0">
    <testcase name="compareTwoNumbers.js should return &quot;&quot;&gt;&quot;&quot;" time="0.000" classname="should return &quot;&quot;&gt;&quot;&quot;">
    </testcase>
    <testcase name="compareTwoNumbers.js should return &quot;&quot;=&quot;&quot;" time="0.000" classname="should return &quot;&quot;=&quot;&quot;">
    </testcase>
    <testcase name="compareTwoNumbers.js should return &quot;&quot;=&quot;&quot;" time="0.000" classname="should return &quot;&quot;=&quot;&quot;">
    </testcase>
    <testcase name="compareTwoNumbers.js should return &quot;&quot;&lt;&quot;&quot;" time="0.000" classname="should return &quot;&quot;&lt;&quot;&quot;">
    </testcase>
    <testcase name="compareTwoNumbers.js should return &quot;&quot;=&quot;&quot;" time="0.000" classname="should return &quot;&quot;=&quot;&quot;">
    </testcase>
  </testsuite>
  <testsuite name="digitsSum.js" timestamp="2024-11-18T15:26:59" tests="9" file="/Users/mac/js-ts-tasks/test/index.js" time="0.001" failures="0">
    <testcase name="digitsSum.js should return &quot;1&quot;" time="0.000" classname="should return &quot;1&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;7&quot;" time="0.000" classname="should return &quot;7&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;2&quot;" time="0.000" classname="should return &quot;2&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;6&quot;" time="0.000" classname="should return &quot;6&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;10&quot;" time="0.000" classname="should return &quot;10&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;33&quot;" time="0.000" classname="should return &quot;33&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;22&quot;" time="0.000" classname="should return &quot;22&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;22&quot;" time="0.000" classname="should return &quot;22&quot;">
    </testcase>
    <testcase name="digitsSum.js should return &quot;0&quot;" time="0.000" classname="should return &quot;0&quot;">
    </testcase>
  </testsuite>
  <testsuite name="divider.js" timestamp="2024-11-18T15:26:59" tests="6" file="/Users/mac/js-ts-tasks/test/index.js" time="0.000" failures="0">
    <testcase name="divider.js should return &quot;&quot;2 0&quot;&quot;" time="0.000" classname="should return &quot;&quot;2 0&quot;&quot;">
    </testcase>
    <testcase name="divider.js should return &quot;&quot;2 2&quot;&quot;" time="0.000" classname="should return &quot;&quot;2 2&quot;&quot;">
    </testcase>
    <testcase name="divider.js should return &quot;&quot;4 1&quot;&quot;" time="0.000" classname="should return &quot;&quot;4 1&quot;&quot;">
    </testcase>
    <testcase name="divider.js should return &quot;&quot;8 0&quot;&quot;" time="0.000" classname="should return &quot;&quot;8 0&quot;&quot;">
    </testcase>
    <testcase name="divider.js should return &quot;&quot;1 1&quot;&quot;" time="0.000" classname="should return &quot;&quot;1 1&quot;&quot;">
    </testcase>
    <testcase name="divider.js should return &quot;&quot;2 1&quot;&quot;" time="0.000" classname="should return &quot;&quot;2 1&quot;&quot;">
    </testcase>
  </testsuite>
  <testsuite name="evalExpr.js" timestamp="2024-11-18T15:26:59" tests="6" file="/Users/mac/js-ts-tasks/test/index.js" time="0.001" failures="0">
    <testcase name="evalExpr.js should return &quot;4&quot;" time="0.000" classname="should return &quot;4&quot;">
    </testcase>
    <testcase name="evalExpr.js should return &quot;340&quot;" time="0.000" classname="should return &quot;340&quot;">
    </testcase>
    <testcase name="evalExpr.js should return &quot;-20&quot;" time="0.000" classname="should return &quot;-20&quot;">
    </testcase>
    <testcase name="evalExpr.js should return &quot;-2036&quot;" time="0.000" classname="should return &quot;-2036&quot;">
    </testcase>
    <testcase name="evalExpr.js should return &quot;4252&quot;" time="0.000" classname="should return &quot;4252&quot;">
    </testcase>
    <testcase name="evalExpr.js should return &quot;-20372&quot;" time="0.000" classname="should return &quot;-20372&quot;">
    </testcase>
  </testsuite>
  <testsuite name="sumInRange.js" timestamp="2024-11-18T15:26:59" tests="5" file="/Users/mac/js-ts-tasks/test/index.js" time="0.002" failures="5">
    <testcase name="sumInRange.js should return &quot;45&quot;" time="0.001" classname="should return &quot;45&quot;">
      <failure message="num is not defined" type="ReferenceError"><![CDATA[ReferenceError: num is not defined
    at sumInRange (src/sumInRange.js:13:7)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="sumInRange.js should return &quot;21&quot;" time="0.000" classname="should return &quot;21&quot;">
      <failure message="num is not defined" type="ReferenceError"><![CDATA[ReferenceError: num is not defined
    at sumInRange (src/sumInRange.js:13:7)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="sumInRange.js should return &quot;-125250&quot;" time="0.000" classname="should return &quot;-125250&quot;">
      <failure message="num is not defined" type="ReferenceError"><![CDATA[ReferenceError: num is not defined
    at sumInRange (src/sumInRange.js:13:7)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="sumInRange.js should return &quot;-1&quot;" time="0.000" classname="should return &quot;-1&quot;">
      <failure message="num is not defined" type="ReferenceError"><![CDATA[ReferenceError: num is not defined
    at sumInRange (src/sumInRange.js:13:7)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
    <testcase name="sumInRange.js should return &quot;55&quot;" time="0.000" classname="should return &quot;55&quot;">
      <failure message="ent is not defined" type="ReferenceError"><![CDATA[ReferenceError: ent is not defined
    at sumInRange (src/sumInRange.js:10:24)
    at Context.<anonymous> (test/index.js:23:27)
    at process.processImmediate (node:internal/timers:511:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="sumTwoNumbers.js" timestamp="2024-11-18T15:26:59" tests="6" file="/Users/mac/js-ts-tasks/test/index.js" time="0.003" failures="1">
    <testcase name="sumTwoNumbers.js should return &quot;16&quot;" time="0.000" classname="should return &quot;16&quot;">
    </testcase>
    <testcase name="sumTwoNumbers.js should return &quot;458&quot;" time="0.000" classname="should return &quot;458&quot;">
    </testcase>
    <testcase name="sumTwoNumbers.js should return &quot;-15&quot;" time="0.000" classname="should return &quot;-15&quot;">
      <failure message="Expected values to be loosely deep-equal:

undefined

should loosely deep-equal

-15" type="AssertionError"><![CDATA[AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:

undefined

should loosely deep-equal

-15
    at Context.<anonymous> (test/index.js:24:18)
    at process.processImmediate (node:internal/timers:511:21)

      + expected - actual:  failed to generate Mocha diff
]]></failure>
    </testcase>
    <testcase name="sumTwoNumbers.js should return &quot;0&quot;" time="0.000" classname="should return &quot;0&quot;">
    </testcase>
    <testcase name="sumTwoNumbers.js should return &quot;-0.9&quot;" time="0.000" classname="should return &quot;-0.9&quot;">
    </testcase>
    <testcase name="sumTwoNumbers.js should return &quot;215042314&quot;" time="0.000" classname="should return &quot;215042314&quot;">
    </testcase>
  </testsuite>
  <testsuite name="volumeCone.js" timestamp="2024-11-18T15:26:59" tests="4" file="/Users/mac/js-ts-tasks/test/index.js" time="0.001" failures="0">
    <testcase name="volumeCone.js should return &quot;20.94&quot;" time="0.000" classname="should return &quot;20.94&quot;">
    </testcase>
    <testcase name="volumeCone.js should return &quot;314.16&quot;" time="0.000" classname="should return &quot;314.16&quot;">
    </testcase>
    <testcase name="volumeCone.js should return &quot;7.33&quot;" time="0.000" classname="should return &quot;7.33&quot;">
    </testcase>
    <testcase name="volumeCone.js should return &quot;28807927.11&quot;" time="0.000" classname="should return &quot;28807927.11&quot;">
    </testcase>
  </testsuite>
</testsuites>